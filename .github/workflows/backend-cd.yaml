name: 'Backend-CD'
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
  
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main
    paths: starter/backend

defaults:
  run:
    working-directory: ./starter/backend

jobs:
  LINT-JOB:
    name: 'LINT-JOB'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup pipenv
        run: pip install pipenv
          
      - name: Install dependencies
        run: pipenv install

      - name: Run tests
        run: pipenv run lint
        
  TEST-JOB:
    name: TEST-JOB
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup pipenv
        run: pip install pipenv
          
      - name: Install dependencies
        run: pipenv install

      - name: Run tests
        run: pipenv run test

  BUILD-JOB:
    name: 'BUILD-JOB'
    runs-on: ubuntu-latest
    needs: [LINT-JOB, TEST-JOB]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
      
      - name: Install Kustomize
        run: GO111MODULE=on go install sigs.k8s.io/kustomize/kustomize/v5@latest
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name cluster

      - name: Deploy to EKS
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: backend
            IMAGE_TAG: ${{ github.sha }}
        working-directory: ./starter/backend/k8s
        run: |
          kustomize edit set image backend=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          kustomize build | kubectl apply -f -